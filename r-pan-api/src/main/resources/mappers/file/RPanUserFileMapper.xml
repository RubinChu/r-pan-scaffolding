<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rubin.rpan.modules.file.dao.RPanUserFileMapper">
    <resultMap id="BaseResultMap" type="com.rubin.rpan.modules.file.entity.RPanUserFile">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="file_id" jdbcType="VARCHAR" property="fileId"/>
        <result column="real_file_id" jdbcType="VARCHAR" property="realFileId"/>
        <result column="filename" jdbcType="VARCHAR" property="filename"/>
        <result column="folder_flag" jdbcType="INTEGER" property="folderFlag"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="del_flag" jdbcType="INTEGER" property="delFlag"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, parent_id, file_id, real_file_id, filename, folder_flag, type, del_flag,
    create_user, create_time, update_user, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from r_pan.r_pan_user_file
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from r_pan.r_pan_user_file
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        insert into r_pan.r_pan_user_file (user_id, parent_id,
          file_id, real_file_id, filename,
          folder_flag, type, del_flag,
          create_user, create_time, update_user,
          update_time)
        values (#{userId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},
          #{fileId,jdbcType=VARCHAR}, #{realFileId,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR},
          #{folderFlag,jdbcType=BIT}, #{type,jdbcType=INTEGER}, #{delFlag,jdbcType=BIT},
          #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
          #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        insert into r_pan.r_pan_user_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="fileId != null">
                file_id,
            </if>
            <if test="realFileId != null">
                real_file_id,
            </if>
            <if test="filename != null">
                filename,
            </if>
            <if test="folderFlag != null">
                folder_flag,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="fileId != null">
                #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="realFileId != null">
                #{realFileId,jdbcType=VARCHAR},
            </if>
            <if test="filename != null">
                #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                #{folderFlag,jdbcType=BIT},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        update r_pan.r_pan_user_file
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="fileId != null">
                file_id = #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="realFileId != null">
                real_file_id = #{realFileId,jdbcType=VARCHAR},
            </if>
            <if test="filename != null">
                filename = #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                folder_flag = #{folderFlag,jdbcType=BIT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        update r_pan.r_pan_user_file
        set user_id = #{userId,jdbcType=VARCHAR},
          parent_id = #{parentId,jdbcType=VARCHAR},
          file_id = #{fileId,jdbcType=VARCHAR},
          real_file_id = #{realFileId,jdbcType=VARCHAR},
          filename = #{filename,jdbcType=VARCHAR},
          folder_flag = #{folderFlag,jdbcType=BIT},
          type = #{type,jdbcType=INTEGER},
          del_flag = #{delFlag,jdbcType=BIT},
          create_user = #{createUser,jdbcType=VARCHAR},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          update_user = #{updateUser,jdbcType=VARCHAR},
          update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
      </update>

    <!--===================================================================自定义===================================================================-->

    <select id="selectByUserIdAndFileTypeAndParentIdAndDelFlag" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            rpuf.file_id AS fileId,
            rpuf.parent_id AS parentId,
            rpuf.filename AS filename,
            rpuf.folder_flag AS folderFlag,
            rpf.file_size_desc AS fileSizeDesc,
            rpuf.type AS type,
            rpuf.create_time AS createTime,
            rpuf.update_time AS updateTime
        FROM
            r_pan.r_pan_user_file rpuf
        LEFT JOIN r_pan.r_pan_file rpf ON rpuf.real_file_id = rpf.file_id
        WHERE
            rpuf.user_id = #{userId}
        <if test="parentId != null and parentId != '-1'">
            AND rpuf.parent_id = #{parentId}
        </if>
        <if test="fileTypeArray != null">
            AND rpuf.type IN
            <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        AND rpuf.del_flag = #{delFlag}
    </select>

    <select id="selectByFileId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            file_id = #{fileId}
        AND del_flag = 0
    </select>

    <select id="selectByFileIdAndUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            file_id = #{fileId}
        AND user_id = #{userId}
        AND del_flag = 0
    </select>

    <select id="selectCountByUserIdAndFilenameAndParentId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan.r_pan_user_file
        WHERE
            user_id = #{userId}
        AND filename = #{filename}
        AND parent_id = #{parentId}
        AND del_flag = 0
    </select>

    <update id="deleteBatch">
        UPDATE
            r_pan.r_pan_user_file
        SET
            del_flag = 1,
            update_user = create_user,
            update_time = NOW()
        WHERE
            file_id IN
            <foreach collection="idList" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        AND user_id = #{userId}
    </update>

    <select id="selectRPanFileDownloadBOByFileId" resultType="com.rubin.rpan.modules.file.bo.RPanFileDownloadBO">
        SELECT
            rpuf.filename AS filename,
            rpf.real_path AS realPath
        FROM
            r_pan.r_pan_user_file rpuf , r_pan.r_pan_file rpf
        WHERE
            rpuf.real_file_id = rpf.file_id
        AND rpuf.file_id = #{fileId}
        AND rpuf.del_flag = 0
    </select>

    <select id="selectFolderListByUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            user_id = #{userId}
        AND del_flag = 0
        AND folder_flag = 1
    </select>

    <select id="selectListByFileIdList" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            file_id IN
            <foreach collection="idList" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
    </select>

    <insert id="insertBatch" parameterType="list">
        INSERT INTO r_pan.r_pan_user_file (user_id, parent_id, file_id, real_file_id, filename, folder_flag, type, del_flag,
        create_user, create_time, update_user, update_time)
        VALUES
        <foreach collection="recordList" item="item" separator=",">
            (
            #{item.userId},
            #{item.parentId},
            #{item.fileId},
            #{item.realFileId},
            #{item.filename},
            #{item.folderFlag},
            #{item.type},
            #{item.delFlag},
            #{item.createUser},
            #{item.createTime},
            #{item.updateUser},
            #{item.updateTime}
            )
        </foreach>

    </insert>

    <select id="selectRPanUserFileVOListByUserIdAndFilenameAndFileTypes" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            rpuf.file_id AS fileId,
            rpuf.parent_id AS parentId,
            rpuf.filename AS filename,
            rpuf.folder_flag AS folderFlag,
            rpf.file_size_desc AS fileSizeDesc,
            rpuf.type AS type,
            rpuf.create_time AS createTime,
            rpuf.update_time AS updateTime
        FROM
            r_pan.r_pan_user_file rpuf
            LEFT JOIN r_pan.r_pan_file rpf ON rpuf.real_file_id = rpf.file_id
        WHERE
            rpuf.user_id = #{userId}
        AND rpuf.filename LIKE CONCAT('%', #{keyword}, '%')
        AND rpuf.del_flag = 0
        <if test="fileTypeArray != null">
            AND rpuf.type IN
            <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectRPanUserFileVOByFileIdAndUserId" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            rpuf.file_id AS fileId,
            rpuf.parent_id AS parentId,
            rpuf.filename AS filename,
            rpuf.folder_flag AS folderFlag,
            rpf.file_size_desc AS fileSizeDesc,
            rpuf.type AS type,
            rpuf.create_time AS createTime,
            rpuf.update_time AS updateTime
        FROM
            r_pan.r_pan_user_file rpuf
            LEFT JOIN r_pan.r_pan_file rpf ON rpuf.real_file_id = rpf.file_id
        WHERE
            rpuf.file_id = #{fileId}
        AND rpuf.user_id = #{userId}
        AND rpuf.del_flag = 0
    </select>

    <select id="selectRPanFilePreviewBOByFileId" resultType="com.rubin.rpan.modules.file.bo.RPanFilePreviewBO">
        SELECT
            rpf.real_path AS realPath,
            rpf.file_preview_content_type AS filePreviewContentType
        FROM
            r_pan.r_pan_user_file rpuf , r_pan.r_pan_file rpf
        WHERE
            rpuf.real_file_id = rpf.file_id
        AND rpuf.file_id = #{fileId}
        AND rpuf.del_flag = 0
    </select>

    <select id="selectAllListByParentId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            parent_id = #{parentId}
    </select>

    <select id="selectAvailableListByParentId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan.r_pan_user_file
        WHERE
            parent_id = #{parentId}
        AND del_flag = 0
    </select>

    <select id="selectAvailableRPanUserFileVOListByParentId" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            rpuf.file_id AS fileId,
            rpuf.parent_id AS parentId,
            rpuf.filename AS filename,
            rpuf.folder_flag AS folderFlag,
            rpf.file_size_desc AS fileSizeDesc,
            rpuf.type AS type,
            rpuf.create_time AS createTime,
            rpuf.update_time AS updateTime
        FROM
            r_pan.r_pan_user_file rpuf
                LEFT JOIN r_pan.r_pan_file rpf ON rpuf.real_file_id = rpf.file_id
        WHERE
            rpuf.parent_id = #{parentId}
        AND rpuf.del_flag = 0
    </select>

    <update id="updateUserFileDelFlagByFileIdListAndUserId">
        UPDATE
            r_pan.r_pan_user_file
        SET
            del_flag = 0,
            update_user = #{userId},
            update_time = NOW()
        WHERE
            user_id = #{userId}
        AND file_id IN
        <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>

    <delete id="physicalDeleteBatch">
        DELETE FROM r_pan.r_pan_user_file WHERE user_id = #{userId} AND file_id IN
        <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="selectCountByRealFileId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan.r_pan_user_file
        WHERE
            real_file_id = #{realFileId}
    </select>

    <select id="selectRPanUserFileVOListByFileIdList" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            rpuf.file_id AS fileId,
            rpuf.parent_id AS parentId,
            rpuf.filename AS filename,
            rpuf.folder_flag AS folderFlag,
            rpf.file_size_desc AS fileSizeDesc,
            rpuf.type AS type,
            rpuf.create_time AS createTime,
            rpuf.update_time AS updateTime
        FROM
            r_pan.r_pan_user_file rpuf
        LEFT JOIN r_pan.r_pan_file rpf ON rpuf.real_file_id = rpf.file_id
        WHERE
            rpuf.del_flag = 0
        AND rpuf.file_id IN
        <foreach collection="fileIdList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

</mapper>