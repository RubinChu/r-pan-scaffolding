<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rubin.rpan.modules.file.dao.RPanUserFileMapper">
    <resultMap id="BaseResultMap" type="com.rubin.rpan.modules.file.entity.RPanUserFile">
        <id column="file_id" jdbcType="BIGINT" property="fileId" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <result column="real_file_id" jdbcType="BIGINT" property="realFileId" />
        <result column="filename" jdbcType="VARCHAR" property="filename" />
        <result column="folder_flag" jdbcType="BIT" property="folderFlag" />
        <result column="file_size_desc" jdbcType="VARCHAR" property="fileSizeDesc" />
        <result column="file_type" jdbcType="BIT" property="fileType" />
        <result column="del_flag" jdbcType="BIT" property="delFlag" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_user" jdbcType="BIGINT" property="updateUser" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Base_Column_List">
        file_id, user_id, parent_id, real_file_id, filename, folder_flag, file_size_desc, file_type, del_flag, create_user, create_time, update_user, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from r_pan_user_file
        where file_id = #{fileId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from r_pan_user_file
        where file_id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        insert into r_pan_user_file (file_id, user_id, parent_id,
          real_file_id, filename, folder_flag,
          file_size_desc, file_type, del_flag,
          create_user, create_time, update_user,
          update_time)
        values (#{fileId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},
          #{realFileId,jdbcType=BIGINT}, #{filename,jdbcType=VARCHAR}, #{folderFlag,jdbcType=BIT},
          #{fileSizeDesc,jdbcType=VARCHAR}, #{fileType,jdbcType=BIT}, #{delFlag,jdbcType=BIT},
          #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT},
          #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        insert into r_pan_user_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="realFileId != null">
                real_file_id,
            </if>
            <if test="filename != null">
                filename,
            </if>
            <if test="folderFlag != null">
                folder_flag,
            </if>
            <if test="fileSizeDesc != null">
                file_size_desc,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="realFileId != null">
                #{realFileId,jdbcType=BIGINT},
            </if>
            <if test="filename != null">
                #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                #{folderFlag,jdbcType=BIT},
            </if>
            <if test="fileSizeDesc != null">
                #{fileSizeDesc,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=BIT},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        update r_pan_user_file
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="realFileId != null">
                real_file_id = #{realFileId,jdbcType=BIGINT},
            </if>
            <if test="filename != null">
                filename = #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                folder_flag = #{folderFlag,jdbcType=BIT},
            </if>
            <if test="fileSizeDesc != null">
                file_size_desc = #{fileSizeDesc,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=BIT},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.rubin.rpan.modules.file.entity.RPanUserFile">
        update r_pan_user_file
        set user_id = #{userId,jdbcType=BIGINT},
          parent_id = #{parentId,jdbcType=BIGINT},
          real_file_id = #{realFileId,jdbcType=BIGINT},
          filename = #{filename,jdbcType=VARCHAR},
          folder_flag = #{folderFlag,jdbcType=BIT},
          file_size_desc = #{fileSizeDesc,jdbcType=VARCHAR},
          file_type = #{file_type,jdbcType=BIT},
          del_flag = #{delFlag,jdbcType=BIT},
          create_user = #{createUser,jdbcType=BIGINT},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          update_user = #{updateUser,jdbcType=BIGINT},
          update_time = #{updateTime,jdbcType=TIMESTAMP}
        where file_id = #{fileId,jdbcType=BIGINT}
    </update>

    <!--===================================================================自定义===================================================================-->

    <select id="selectRPanUserFileVOListByUserIdAndFileTypeAndParentIdAndDelFlag" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            <if test="parentId != null and parentId != -1">
                AND parent_id = #{parentId}
            </if>
            <if test="fileTypeArray != null">
                AND file_type IN
                <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            AND del_flag = #{delFlag}
    </select>

    <select id="selectByFileIdAndUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            AND file_id = #{fileId}
            AND del_flag = 0
    </select>

    <select id="selectCountByUserIdAndFilenameAndParentId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            AND del_flag = 0
            AND parent_id = #{parentId}
            AND filename = #{filename}
    </select>

    <update id="deleteBatch">
        UPDATE
            r_pan_user_file
        SET
            del_flag = 1,
            update_user = #{userId},
            update_time = NOW()
        WHERE
            file_id IN
            <foreach collection="idList" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
            AND user_id = #{userId}
    </update>

    <select id="selectFolderListByUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            AND del_flag = 0
            AND folder_flag = 1
    </select>

    <select id="selectListByFileIdList" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            file_id IN
            <foreach collection="idList" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
    </select>

    <insert id="insertBatch" parameterType="list">
        INSERT INTO r_pan_user_file (user_id, parent_id, file_id, real_file_id, filename, folder_flag, file_type, del_flag, create_user, create_time, update_user, update_time)
        VALUES
        <foreach collection="recordList" item="item" separator=",">
            (
            #{item.userId},
            #{item.parentId},
            #{item.fileId},
            #{item.realFileId},
            #{item.filename},
            #{item.folderFlag},
            #{item.fileType},
            #{item.delFlag},
            #{item.createUser},
            #{item.createTime},
            #{item.updateUser},
            #{item.updateTime}
            )
        </foreach>

    </insert>

    <select id="selectRPanUserFileVOListByUserIdAndFilenameAndFileTypes" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            AND del_flag = 0
            AND filename LIKE CONCAT('%', #{keyword}, '%')
            <if test="fileTypeArray != null">
                AND file_type IN
                <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
    </select>

    <select id="selectRPanUserFileVOByFileIdAndUserId" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
            AND del_flag = 0
    </select>

    <select id="selectAllListByParentId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
    </select>

    <select id="selectAvailableListByParentId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
            AND del_flag = 0
    </select>

    <select id="selectAvailableRPanUserFileVOListByParentId" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
            AND del_flag = 0
    </select>

    <update id="updateUserFileDelFlagByFileIdListAndUserId">
        UPDATE
            r_pan_user_file
        SET
            del_flag = 0,
            update_user = #{userId},
            update_time = NOW()
        WHERE
            user_id = #{userId}
            AND file_id IN
            <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
    </update>

    <delete id="physicalDeleteBatch">
        DELETE FROM r_pan_user_file WHERE user_id = #{userId} AND file_id IN
        <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="selectCountByRealFileId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan_user_file
        WHERE
            real_file_id = #{realFileId}
    </select>

    <select id="selectRPanUserFileVOListByFileIdList" resultType="com.rubin.rpan.modules.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            del_flag = 0
            AND file_id IN
            <foreach collection="fileIdList" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
    </select>

    <select id="selectTopFolderByUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            r_pan_user_file
        WHERE
            user_id = #{userId}
            AND del_flag = 0
            AND parent_id = 0
            AND folder_flag = 1
    </select>

    <select id="selectAvailableFileIdListByParentId" resultType="java.lang.Long">
        SELECT
            file_id
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
        AND del_flag = 0
    </select>

</mapper>